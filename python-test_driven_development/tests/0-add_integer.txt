"""
This module contains test cases for the `add_integer` function.
"""

from 0-add_integer import add_integer

def test_add_integers():
    """
    Tests adding two positive integers.
    """
    assert add_integer(2, 3) == 5


def test_add_negative_integers():
    """
    Tests adding a positive and a negative integer.
    """
    assert add_integer(5, -3) == 2


def test_add_zero():
    """
    Tests adding zero.
    """
    assert add_integer(0, 7) == 7
    assert add_integer(10, 0) == 10


def test_add_floats():
    """
    Tests adding two floats.
    """
    assert add_integer(2.5, 3.7) == 6


def test_add_integer_and_float():
    """
    Tests adding an integer and a float.
    """
    assert add_integer(4, 1.8) == 5


def test_default_value():
    """
    Tests using the default value for the second argument.
    """
    assert add_integer(5) == 103


def test_type_error_a():
    """
    Tests raising a TypeError when the first argument is not an integer or float.
    """
    try:
        add_integer("hello", 3)
        assert False, "Expected TypeError"
    except TypeError as e:
        assert str(e) == "a must be an integer"


def test_type_error_b():
    """
    Tests raising a TypeError when the second argument is not an integer or float.
    """
    try:
        add_integer(2, [1, 2, 3])
        assert False, "Expected TypeError"
    except TypeError as e:
        assert str(e) == "b must be an integer"